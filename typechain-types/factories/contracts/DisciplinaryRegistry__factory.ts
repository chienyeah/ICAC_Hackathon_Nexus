/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DisciplinaryRegistry,
  DisciplinaryRegistryInterface,
} from "../../contracts/DisciplinaryRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleManager",
        name: "_roles",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "kind",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "ts",
        type: "uint64",
      },
    ],
    name: "SanctionLogged",
    type: "event",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        internalType: "string",
        name: "kind",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endDate",
        type: "uint64",
      },
    ],
    name: "logSanction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roles",
    outputs: [
      {
        internalType: "contract RoleManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sanctions",
    outputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        internalType: "string",
        name: "kind",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endDate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "ts",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611169380380611169833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b611040806101296000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306661abd14610051578063392f5f641461006f57806361f32b601461008d578063cdc5caa1146100a9575b600080fd5b6100596100de565b60405161006691906106af565b60405180910390f35b6100776100e4565b6040516100849190610749565b60405180910390f35b6100a760048036038101906100a29190610851565b610108565b005b6100c360048036038101906100be9190610939565b6104ee565b6040516100d596959493929190610a14565b60405180910390f35b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d1485460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166375b238fc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d39190610ab9565b336040518363ffffffff1660e01b81526004016101f1929190610af5565b602060405180830381865afa15801561020e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102329190610b56565b610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610bcf565b60405180910390fd5b600060016000815461028290610c1e565b91905081905590506040518060c001604052808973ffffffffffffffffffffffffffffffffffffffff16815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018467ffffffffffffffff1681526020018367ffffffffffffffff1681526020014267ffffffffffffffff168152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816103e29190610e97565b5060408201518160020190816103f89190610e97565b5060608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060a08201518160030160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508773ffffffffffffffffffffffffffffffffffffffff16817fc6f57a8582f204859bae12482de32e920cdd2e95d951f992f048be8c7057ceab898989898989426040516104dc9796959493929190610fa5565b60405180910390a35050505050505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461053790610cc4565b80601f016020809104026020016040519081016040528092919081815260200182805461056390610cc4565b80156105b05780601f10610585576101008083540402835291602001916105b0565b820191906000526020600020905b81548152906001019060200180831161059357829003601f168201915b5050505050908060020180546105c590610cc4565b80601f01602080910402602001604051908101604052809291908181526020018280546105f190610cc4565b801561063e5780601f106106135761010080835404028352916020019161063e565b820191906000526020600020905b81548152906001019060200180831161062157829003601f168201915b5050505050908060030160009054906101000a900467ffffffffffffffff16908060030160089054906101000a900467ffffffffffffffff16908060030160109054906101000a900467ffffffffffffffff16905086565b6000819050919050565b6106a981610696565b82525050565b60006020820190506106c460008301846106a0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061070f61070a610705846106ca565b6106ea565b6106ca565b9050919050565b6000610721826106f4565b9050919050565b600061073382610716565b9050919050565b61074381610728565b82525050565b600060208201905061075e600083018461073a565b92915050565b600080fd5b600080fd5b6000610779826106ca565b9050919050565b6107898161076e565b811461079457600080fd5b50565b6000813590506107a681610780565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107d1576107d06107ac565b5b8235905067ffffffffffffffff8111156107ee576107ed6107b1565b5b60208301915083600182028301111561080a576108096107b6565b5b9250929050565b600067ffffffffffffffff82169050919050565b61082e81610811565b811461083957600080fd5b50565b60008135905061084b81610825565b92915050565b600080600080600080600060a0888a0312156108705761086f610764565b5b600061087e8a828b01610797565b975050602088013567ffffffffffffffff81111561089f5761089e610769565b5b6108ab8a828b016107bb565b9650965050604088013567ffffffffffffffff8111156108ce576108cd610769565b5b6108da8a828b016107bb565b945094505060606108ed8a828b0161083c565b92505060806108fe8a828b0161083c565b91505092959891949750929550565b61091681610696565b811461092157600080fd5b50565b6000813590506109338161090d565b92915050565b60006020828403121561094f5761094e610764565b5b600061095d84828501610924565b91505092915050565b61096f8161076e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109af578082015181840152602081019050610994565b60008484015250505050565b6000601f19601f8301169050919050565b60006109d782610975565b6109e18185610980565b93506109f1818560208601610991565b6109fa816109bb565b840191505092915050565b610a0e81610811565b82525050565b600060c082019050610a296000830189610966565b8181036020830152610a3b81886109cc565b90508181036040830152610a4f81876109cc565b9050610a5e6060830186610a05565b610a6b6080830185610a05565b610a7860a0830184610a05565b979650505050505050565b6000819050919050565b610a9681610a83565b8114610aa157600080fd5b50565b600081519050610ab381610a8d565b92915050565b600060208284031215610acf57610ace610764565b5b6000610add84828501610aa4565b91505092915050565b610aef81610a83565b82525050565b6000604082019050610b0a6000830185610ae6565b610b176020830184610966565b9392505050565b60008115159050919050565b610b3381610b1e565b8114610b3e57600080fd5b50565b600081519050610b5081610b2a565b92915050565b600060208284031215610b6c57610b6b610764565b5b6000610b7a84828501610b41565b91505092915050565b7f4e4f545f41444d494e0000000000000000000000000000000000000000000000600082015250565b6000610bb9600983610980565b9150610bc482610b83565b602082019050919050565b60006020820190508181036000830152610be881610bac565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2982610696565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5b57610c5a610bef565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cdc57607f821691505b602082108103610cef57610cee610c95565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d1a565b610d618683610d1a565b95508019841693508086168417925050509392505050565b6000610d94610d8f610d8a84610696565b6106ea565b610696565b9050919050565b6000819050919050565b610dae83610d79565b610dc2610dba82610d9b565b848454610d27565b825550505050565b600090565b610dd7610dca565b610de2818484610da5565b505050565b5b81811015610e0657610dfb600082610dcf565b600181019050610de8565b5050565b601f821115610e4b57610e1c81610cf5565b610e2584610d0a565b81016020851015610e34578190505b610e48610e4085610d0a565b830182610de7565b50505b505050565b600082821c905092915050565b6000610e6e60001984600802610e50565b1980831691505092915050565b6000610e878383610e5d565b9150826002028217905092915050565b610ea082610975565b67ffffffffffffffff811115610eb957610eb8610c66565b5b610ec38254610cc4565b610ece828285610e0a565b600060209050601f831160018114610f015760008415610eef578287015190505b610ef98582610e7b565b865550610f61565b601f198416610f0f86610cf5565b60005b82811015610f3757848901518255600182019150602085019450602081019050610f12565b86831015610f545784890151610f50601f891682610e5d565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000610f848385610980565b9350610f91838584610f69565b610f9a836109bb565b840190509392505050565b600060a0820190508181036000830152610fc081898b610f78565b90508181036020830152610fd5818789610f78565b9050610fe46040830186610a05565b610ff16060830185610a05565b610ffe6080830184610a05565b9897505050505050505056fea26469706673582212205d7f2f2fa5e3d6768743a45cdd98d5afdf68c7d7b8d08ecd8fa4060c1738086c64736f6c634300081c0033";

type DisciplinaryRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisciplinaryRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DisciplinaryRegistry__factory extends ContractFactory {
  constructor(...args: DisciplinaryRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _roles: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_roles, overrides || {});
  }
  override deploy(
    _roles: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_roles, overrides || {}) as Promise<
      DisciplinaryRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DisciplinaryRegistry__factory {
    return super.connect(runner) as DisciplinaryRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisciplinaryRegistryInterface {
    return new Interface(_abi) as DisciplinaryRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DisciplinaryRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DisciplinaryRegistry;
  }
}
